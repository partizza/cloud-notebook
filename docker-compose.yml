version: "3.4"
services:

  localstack:
    image: localstack/localstack:3.0
    container_name: cn_localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=sns,sqs
    volumes:
      - ./localstack/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh
    networks:
      cloud_notebook_net:
        ipv4_address: 172.22.2.2

  minio:
    image: minio/minio:RELEASE.2024-03-10T02-53-48Z
    container_name: minio
    hostname: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: sh
    command: -c 'mkdir -p /data/audio-resources && minio server /data --console-address ":9001"'
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    networks:
      - cloud_notebook_net

  audio-service:
    build:
      context: ./audio-service
      dockerfile: Dockerfile
    image: cloud.notebook/audio-service:1
    depends_on:
      audio-db:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://audio-pstg-db:5432/audio_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_CLOUD_AWS_ENDPOINT: "http://172.22.2.2:4566"
      SPRING_CLOUD_AWS_S3_ENDPOINT: "http://minio:9000"
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_REGION: us-east-1
      NOTEBOOK_AUDIO_SERVICE_S3_BUCKET: audio-resources
      NOTEBOOK_AUDIO_SERVICE_STOREDAUDIOTOPIC_NAME: stored-audio-sns
    ports:
      - "8080:8080"
    networks:
      - cloud_notebook_net

  audio-db:
    image: postgres:15.5-alpine
    container_name: audio-pstg-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: audio_db
    networks:
      - cloud_notebook_net

networks:
  cloud_notebook_net:
    ipam:
      config:
        - subnet: 172.22.0.0/16
          ip_range: 172.22.5.0/24